module ResolveSubnet declares resolve_subnet

export resolve_subnet

import Srv, Service from "@fluencelabs/aqua-lib/builtin.aqua"
import Subnet from "@fluencelabs/aqua-lib/subnet.aqua"

data Worker:
  pat_id: string
  host_id: string
  worker_id: ?string

data Subnet:
  workers: []Worker
  error: []string

service Console("run-console"):
  print(a: ‚ä§)

data WorkerServices:
  worker_id: string
  services: []string

func resolve_subnet(deal_id: string):
  on HOST_PEER_ID:
    subnet <- Subnet.resolve(deal_id)
  <- subnet

-- func show_subnet(deal_id: string) -> []WorkerServices:
--   subnet <- resolve_subnet(deal_id)

--   services: *WorkerServices
--   for w <- subnet.workers:
--     if w.worker_id != nil:
--       on w.worker_id! via w.host_id:
--         -- get list of all services on this worker
--         srvs <- Srv.list()

--         -- gather aliases
--         aliases: *string
--         for s <- srvs:
--           if s.aliases.length != 0:
--             aliases <<- s.aliases[0]

--         services <<- WorkerServices(worker_id = w.worker_id!, services = aliases)

--   <- services
